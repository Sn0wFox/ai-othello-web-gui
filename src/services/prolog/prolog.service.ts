import { Injectable } from '@angular/core';
import { ajax } from 'jquery';
import * as Bluebird from 'bluebird';

/**
 * The root URL from which the prolog server is accessible.
 */
const PROLOG_SERVER_ROOT: string = "http://localhost:8000";

@Injectable()
export class PrologService {

  /**
   * Returns the initial board,
   * with tokens at their starting positions.
   */
  public getInitialBoard(): Bluebird<number[][]> {
    return Bluebird.resolve(
      ajax({
        url: PROLOG_SERVER_ROOT + "/api/board/initial"
      }))
      .then((board) => {
        console.log(board);
        return board;
      });
  }
  
  /**
   * Returns the updated board after that the given player
   * plays the move defined by {moveX, moveY}.
   * Requirements: the move must be playable.
   */
  // TODO: define some interfaces / enum
  public updateBoard(board: number[][], player: number, moveX: number, moveY: number): Bluebird<number[][]> {
    return Bluebird.resolve(
      ajax({
        url: PROLOG_SERVER_ROOT + "/api/board/update" +
             "?player=" + player +
             "&movex=" + moveX +
             "&movey=" + moveY,
        data: board
      }))
      .then((board) => {
        console.log(board);
        return board;
      });
  }
  
  /**
   * Returns the updated board after that the given AI
   * plays the move generated by the given AI.
   */
  // TODO: define some interfaces / enum
  public updateBoardFromAIPlay(board: number[][], ai: number, player: number): Bluebird<number[][]> {
    return Bluebird.resolve(
      ajax({
        url: PROLOG_SERVER_ROOT + "/api/play" +
             "?ai=" + ai +
             "&player=" + player,
        data: board
      }))
      .then((board) => {
        console.log(board);
        return board;
      });
  }
  
  /**
   * Returns wheter or not the given move is a valid one
   * for the given user.
   */
  // TODO: define some interfaces / enum
  public isValideMove(board: number[][], player: number, moveX: number, moveY: number): Bluebird<boolean> {
    return Bluebird.resolve(
      ajax({
        url: PROLOG_SERVER_ROOT + "/api/play/validate" +
             "?player=" + player +
             "&movex=" + moveX +
             "&movey=" + moveY,
        data: board
      }))
      .then((res) => {
        console.log(board);
        return res.playable;
      });
  }
}









